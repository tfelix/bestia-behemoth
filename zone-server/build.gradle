plugins {
	id 'org.jetbrains.kotlin.plugin.spring'
	id 'org.springframework.boot'
	id 'io.spring.dependency-management'
}

group = 'net.bestia.zone'
description = 'zone-server'

dependencies {
	implementation project(':bnet-messages')
	implementation project(':shared')

	implementation 'io.netty:netty-all:4.1.118.Final'
	implementation 'io.github.oshai:kotlin-logging-jvm:7.0.3'
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security' // needed?
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	implementation 'io.github.quillraven.fleks:Fleks:2.10'
	implementation 'org.reflections:reflections:0.10.2'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.17.0'
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.17.0'
	implementation 'io.jsonwebtoken:jjwt-api:0.12.6'

    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'
	runtimeOnly 'com.h2database:h2'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
	testImplementation 'org.awaitility:awaitility:4.2.2'
    testImplementation 'io.mockk:mockk:1.14.5'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

allOpen {
	annotation 'jakarta.persistence.Entity'
	annotation 'jakarta.persistence.MappedSuperclass'
	annotation 'jakarta.persistence.Embeddable'
}

tasks.named('test') {
	useJUnitPlatform()
}

/**
 * Enable resource filtering to fill in the version number
 */
processResources {
	filesMatching("**/application.yml") {
		expand(version: project.version)
	}
}