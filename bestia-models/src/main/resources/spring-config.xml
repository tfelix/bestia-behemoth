<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd 
    http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/jdbc 
    http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
    http://www.springframework.org/schema/data/jpa
    http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

	<!-- we will manage transactions with annotations -->
	<tx:annotation-driven />

	<!-- we can use annotations -->
	<context:annotation-config />

	<!-- package to look for annotated classes -->
	<context:component-scan base-package="net.bestia.model.*" />

	<jpa:repositories base-package="net.bestia.model.dao" />
	
	<!-- Configure ConnectionPool Hikari -->
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
        <property name="driverClassName" value="${db.driver}"/>
        <property name="jdbcUrl" value="${db.url}"/>
        <property name="username" value="${db.username}"/>
        <property name="password" value="${db.password}"/>
    </bean>

	<!-- data source for our database -->
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource">
        <constructor-arg index="0" ref="hikariConfig"/>
    </bean>

	<!--
        Specifies the default settings that are compatible with Hibernate.
    -->
	<bean id="jpaVendorAdapter"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="showSql" value="true" />
		<property name="generateDdl" value="true" />
		<property name="database" value="MYSQL" />
	</bean>
	
	<!-- Creates the bean that creates the JPA entity manager factory. -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="jpaVendorAdapter" ref="jpaVendorAdapter"/>
        <!-- spring based scanning for entity classes> -->
		<property name="packagesToScan" value="net.bestia.model" />
        <property name="jpaProperties">
            <props>
                <!--
                    Configures the used database dialect. This allows Hibernate to create SQL
                    that is optimized for the used database.
                -->
                <prop key="hibernate.dialect">${db.dialect}</prop>

                <!--
                    Specifies the action that is invoked to the database when the Hibernate
                    SessionFactory is created or closed.
                -->
                <prop key="hibernate.hbm2ddl.auto">${db.hbm2ddl}</prop>
                
                <!--
                    If the value of this property is true, Hibernate writes all SQL
                    statements to the console.
                -->
                <prop key="hibernate.show_sql">false</prop>

                <!--
                    If the value of this property is true, Hibernate will use prettyprint
                    when it writes SQL to the console.
                -->
                <prop key="hibernate.format_sql">false</prop>
            </props>
        </property>
    </bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>
</beans>