package net.bestia.model.map;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.Objects;

import net.bestia.model.geometry.Point;
import net.bestia.model.geometry.Rect;

/**
 * This is a map data transfer object. It contains all the needed map data to
 * construct maps or map chunks. It can be easily serialized for binary storage
 * inside the database.
 * 
 * It is also used to be directly generated by the map creation algorithms and
 * to be persisted into the database.
 * 
 * @author Thomas Felix
 *
 */
public class MapDataDTO implements Serializable {

	private static final long serialVersionUID = 1L;
	private final Rect rect;
	private final int[] groundLayer;
	private final List<Map<Point, Integer>> layers = new ArrayList<>();

	public MapDataDTO(Rect rect) {

		this.rect = Objects.requireNonNull(rect);

		int size = (int) (rect.getHeight() * rect.getWidth());
		groundLayer = new int[size];

	}

	public void putGroundLayer(long x, long y, int gid) {

	}

	public void putLayer(int layer, long x, long y, int gid) {

	}

	/**
	 * Returns the rectangular area represented by this map part data.
	 * 
	 * @return The rectangular area of this part of the map.
	 */
	public Rect getRect() {
		return rect;
	}

}
