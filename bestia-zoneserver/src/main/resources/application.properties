
server.name=zoneserver-${random.uuid}

server.version=@project.version@

# Server REST port for web access.
server.port=${random.int[8080,20000]}

server.entityBuffer = 100

mapgen.tempDir=D:/bestia_map

# Size of the data transfer object which are used to store the map.
mapgen.dtoSize=100

# The key of the re-captcha authentication checks.
recaptcha.secretKey=XXXXXX

logging.level.=WARN
logging.level.net.bestia=TRACE
logging.level.de.tfelix.bestia=TRACE
logging.level.net.bestia.entity.component.StatusService=DEBUG
logging.level.net.bestia.entity.component.EntityService=DEBUG
logging.level.net.bestia.zoneserver.service.LatencyService=INFO
logging.level.net.bestia.zoneserver.actor.zone.WebIngestActor=INFO
logging.level.net.bestia.entity.EntityService=INFO
#logging.level.org.hibernate=WARN
#logging.level.com.hazelcast=WARN
#logging.level.org.springframework=WARN

# ===============================
# = SCRIPTS
# ===============================
script.path=classpath:script


# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database "netgloo_blog"
spring.datasource.url = jdbc:mysql://localhost/bestia

# Username and password
spring.datasource.username = bestia
spring.datasource.password = bestia

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = false

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# ===============================
# = Spring
# ===============================

# The default active profile. production used for normal startup operation.
spring.profiles.active=production